// <auto-generated />
using ApiEstudiantes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiEstudiantes.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiEstudiantes.Models.Estudiante", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstudianteId"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstudianteId");

                    b.ToTable("Estudiantes");

                    b.HasData(
                        new
                        {
                            EstudianteId = 1,
                            Nombre = "Juan Pérez"
                        },
                        new
                        {
                            EstudianteId = 2,
                            Nombre = "María López"
                        });
                });

            modelBuilder.Entity("ApiEstudiantes.Models.EstudianteMateria", b =>
                {
                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.HasKey("EstudianteId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("EstudianteMaterias");

                    b.HasData(
                        new
                        {
                            EstudianteId = 1,
                            MateriaId = 1
                        },
                        new
                        {
                            EstudianteId = 1,
                            MateriaId = 3
                        },
                        new
                        {
                            EstudianteId = 1,
                            MateriaId = 5
                        },
                        new
                        {
                            EstudianteId = 2,
                            MateriaId = 2
                        },
                        new
                        {
                            EstudianteId = 2,
                            MateriaId = 4
                        },
                        new
                        {
                            EstudianteId = 2,
                            MateriaId = 7
                        });
                });

            modelBuilder.Entity("ApiEstudiantes.Models.Materia", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MateriaId"));

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("MateriaId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            MateriaId = 1,
                            Creditos = 3,
                            Nombre = "Matemáticas",
                            ProfesorId = 1
                        },
                        new
                        {
                            MateriaId = 2,
                            Creditos = 3,
                            Nombre = "Estadística",
                            ProfesorId = 1
                        },
                        new
                        {
                            MateriaId = 3,
                            Creditos = 3,
                            Nombre = "Física",
                            ProfesorId = 2
                        },
                        new
                        {
                            MateriaId = 4,
                            Creditos = 3,
                            Nombre = "Química",
                            ProfesorId = 2
                        },
                        new
                        {
                            MateriaId = 5,
                            Creditos = 3,
                            Nombre = "Historia",
                            ProfesorId = 3
                        },
                        new
                        {
                            MateriaId = 6,
                            Creditos = 3,
                            Nombre = "Literatura",
                            ProfesorId = 3
                        },
                        new
                        {
                            MateriaId = 7,
                            Creditos = 3,
                            Nombre = "Programación",
                            ProfesorId = 4
                        },
                        new
                        {
                            MateriaId = 8,
                            Creditos = 3,
                            Nombre = "Bases de Datos",
                            ProfesorId = 4
                        },
                        new
                        {
                            MateriaId = 9,
                            Creditos = 3,
                            Nombre = "Inglés",
                            ProfesorId = 5
                        },
                        new
                        {
                            MateriaId = 10,
                            Creditos = 3,
                            Nombre = "Francés",
                            ProfesorId = 5
                        });
                });

            modelBuilder.Entity("ApiEstudiantes.Models.Profesor", b =>
                {
                    b.Property<int>("ProfesorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfesorId"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfesorId");

                    b.ToTable("Profesores");

                    b.HasData(
                        new
                        {
                            ProfesorId = 1,
                            Nombre = "Ana Torres"
                        },
                        new
                        {
                            ProfesorId = 2,
                            Nombre = "Carlos Gómez"
                        },
                        new
                        {
                            ProfesorId = 3,
                            Nombre = "Laura Sánchez"
                        },
                        new
                        {
                            ProfesorId = 4,
                            Nombre = "Miguel Ángel"
                        },
                        new
                        {
                            ProfesorId = 5,
                            Nombre = "Patricia Ramírez"
                        });
                });

            modelBuilder.Entity("ApiEstudiantes.Models.EstudianteMateria", b =>
                {
                    b.HasOne("ApiEstudiantes.Models.Estudiante", "Estudiante")
                        .WithMany("EstudianteMaterias")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiEstudiantes.Models.Materia", "Materia")
                        .WithMany("EstudianteMaterias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("ApiEstudiantes.Models.Materia", b =>
                {
                    b.HasOne("ApiEstudiantes.Models.Profesor", "Profesor")
                        .WithMany("Materias")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("ApiEstudiantes.Models.Estudiante", b =>
                {
                    b.Navigation("EstudianteMaterias");
                });

            modelBuilder.Entity("ApiEstudiantes.Models.Materia", b =>
                {
                    b.Navigation("EstudianteMaterias");
                });

            modelBuilder.Entity("ApiEstudiantes.Models.Profesor", b =>
                {
                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
